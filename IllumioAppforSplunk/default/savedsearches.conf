[Illumio_Auditable_Events]
enableSched = 1
cron_schedule = */15 * * * *
dispatch.earliest_time = -20m
dispatch.latest_time = -5m
auto_summarize = 1
auto_summarize.cron_schedule = 55 0 * * 0
auto_summarize.dispatch.earliest_time = -1w
auto_summarize.dispatch.latest_time = now
search = | tstats `summariesonly` values(Audit.pce_fqdn) AS pce_fqdn, values(Audit.org_id) AS org_id, values(Audit.severity) AS severity, values(Audit.object) AS object, values(Audit.object_category) AS object_category, values(Audit.object_id) AS object_id, values(Audit.user) AS user FROM datamodel=Illumio.Audit WHERE Audit.category=auditable BY _time Audit.event_type \
    | rename Audit.event_type AS event_type

[Illumio_PortScan_Traffic]
enableSched = 1
cron_schedule = */20 * * * *
dispatch.earliest_time = -25m
dispatch.latest_time = -5m
auto_summarize = 1
auto_summarize.cron_schedule = 55 1 * * 0
auto_summarize.dispatch.earliest_time = -1w
auto_summarize.dispatch.latest_time = now
search = | tstats `summariesonly` values(Traffic.pce_fqdn) AS pce_fqdn, values(Traffic.org_id) AS org_id, dc(Traffic.dest_port) AS ports_scanned, values(Traffic.src_host) AS src_host, values(Traffic.src_href) AS src_href, values(Traffic.dest_host) AS dest_host, values(Traffic.dest_href) AS dest_href FROM datamodel=Illumio.Traffic WHERE Traffic.direction=inbound BY _time Traffic.src_ip Traffic.dest_ip Traffic.network

[Illumio_PortScan]
search = | savedsearch Illumio_PortScan_Traffic \
    | search pce_fqdn="$pce_fqdn$" org_id="$org_id$" \
    | bin _time [| inputlookup illumio_port_scan_settings_lookup WHERE pce_fqdn="$pce_fqdn$" org_id="$org_id$" | eval result = "span=" . interval . "s" | return $result] \
    | stats sum(ports_scanned) AS ports_scanned, latest(pce_fqdn) AS pce_fqdn, latest(org_id) AS org_id, latest(Traffic.src_ip) AS src_ip, latest(Traffic.dest_ip) AS dest_ip, latest(src_host) AS src_host, latest(src_href) AS src_href, latest(dest_host) AS dest_host, latest(dest_href) AS dest_href BY _time \
    | lookup illumio_port_scan_settings_lookup pce_fqdn org_id OUTPUT threshold allowed_ips \
    | where ports_scanned > threshold AND NOT IN(allowed_ips, src_ip)

[Illumio_Firewall_Tampering]
enableSched = 1
cron_schedule = */15 * * * *
dispatch.earliest_time = -20m
dispatch.latest_time = -5m
auto_summarize = 1
auto_summarize.cron_schedule = 55 2 * * 0
auto_summarize.dispatch.earliest_time = -1w
auto_summarize.dispatch.latest_time = now
search = | tstats `summariesonly` values(Audit.event_type) AS event_type, values(Audit.object) AS workload_hostname FROM datamodel=Illumio.Audit WHERE Audit.event_type="agent.tampering" BY _time, Audit.pce_fqdn, Audit.org_id, Audit.object_id \
    | rename Audit.pce_fqdn AS pce_fqdn, Audit.org_id AS org_id, Audit.object_id AS ven_href

[Illumio_Check_PCE_Collector_Data]
enableSched = 0
cron_schedule = */5 * * * *
action.email.useNSSubject = 1
alert.suppress = 0
alert.track = 1
alert_condition = search count = 0
counttype = custom
description = To trigger an alert if PCE data is not received in last five minutes
dispatch.earliest_time = -5m@m
dispatch.latest_time = now
display.events.fields = ["host","source","sourcetype","measurement{@avg}"]
display.general.type = statistics
display.page.search.mode = verbose
display.page.search.tab = statistics
search = `illumio_get_index` sourcetype="illumio:pce*" | stats count

[Illumio_VEN_Inactivity_Timer_Alert]
enableSched = 0
cron_schedule = */5 * * * *
dispatch.earliest_time = -5m@m
dispatch.latest_time = now
action.email.useNSSubject = 1
alert.digest_mode = 0
alert.suppress = 0
alert.track = 1
counttype = number of events
quantity = 0
relation = greater than
search = | tstats `summariesonly` values(Audit.event_type) as event_type, values(Audit.href) as href from datamodel=Illumio.Audit WHERE Audit.event_type="agent.suspend" BY _time
